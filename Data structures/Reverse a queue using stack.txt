#include <stdio.h>

int peek();
void enqueue(int x);
int dequeue();
int isqueueempty();
int isqueueful();

int queue[5] = {0};
int front, rear = -1;

typedef struct
{
    int data[5];
    int top;
} stack;

int main()
{
    stack s1;
    s1.top = -1;
    int i;
    int a[] = {0,5,4,6,7};
 
    for (i = 0; i < 5; i++)
    {
        int c = a[i];
        enqueue(c);
      
    }
    for(i=0;i<5;i++)
    {
        s1.data[++s1.top] = dequeue();
    }
    for (i = 0; i < 5; i++)
    {
        printf("%d ", s1.data[s1.top--]);
    }

    return 0;
}

int peek()
{
    return queue[front];
}

void enqueue(int x)
{
    if (isqueueful())
    {
        printf("queue is full\n");
    }
    else
    {
        if (isqueueempty())
            front = 0;
        queue[++rear] = x;
    }
}

int dequeue()
{
    if (isqueueempty())
    {
        printf("queue is empty\n");
    }
    else
    {
        return queue[front++];
    }
}

int isqueueempty()
{
    return front == -1;
}

int isqueueful()
{
    return rear == 4;
}
